<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.DishClassMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加菜品分类记录 -->
	<insert id="addDishClass" parameterType="dishClass">
		insert into t_dishClass(dishClassName) values 
		(#{dishClassName})
	</insert>

	<!-- 按照查询条件分页查询菜品分类记录 -->
	<select id="queryDishClass" resultMap="dishClassMap" >
		select t_dishClass.* from t_dishClass ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="dishClassMap" type="dishClass">
        <id property="dishClassId" column="dishClassId" />
    </resultMap>

    <!-- 按照查询条件查询所有菜品分类记录 -->
	<select id="queryDishClassList" resultMap="dishClassMap" >
		select t_dishClass.* from t_dishClass ${where}
	</select>

    <!-- 按照查询条件的菜品分类记录数 -->
	<select id="queryDishClassCount" resultType="int">
		select count(*) from t_dishClass ${where}
	</select>

	<!-- 根据主键查询某个菜品分类记录 -->
	<select id="getDishClass" parameterType="int" resultMap="dishClassMap">
		select * from t_dishClass where t_dishClass.dishClassId = #{dishClassId}
	</select>

	<!-- 更新菜品分类记录 -->
	<update id="updateDishClass" parameterType="dishClass">
		update t_dishClass set dishClassName=#{dishClassName} where dishClassId = #{dishClassId}
	</update>

	<!-- 删除菜品分类记录 -->
	<delete id="deleteDishClass" parameterType="int">
		delete from t_dishClass where dishClassId=#{dishClassId}
	</delete>

</mapper>
